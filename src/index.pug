doctype html
html
	head
		meta(charset='utf-8')
		meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
		title StraticJS

		link(rel='stylesheet', type='text/css', href='build/build.css')

	body

		article.deck

			section
				h1 StraticJS
				h3 AJ Jordan

			section
				h2 About moi
				h3 Free software nerd
				h3 Node.js aficionado
				h3 Unix philosophy fan
				h3 Author of StraticJS

			section
				h2 What is StraticJS?
				h3 One-time generation of static HTML, CSS & JS blogs
				h3 Written in Node.js
				h3 Based on #[a(href='http://gulpjs.com') Gulp] build system
				h3 Focused on directly exposing (clean) internals
				h3 Easier to understand, cleaner mental model, more flexible
				h3 Beta

			section
				h2 Let's talk about blogging
				h3 Traditional platforms
				h3 WYSIWYG
				h3 Incoming request invokes code to render the page
				h3 Contents typically retrieved from a database

			section
				h2 What happens when you refresh?
				h3 Same thing
				h3 Code is run even if content didn't change
				h3 Enter static site generators
				h3 Push page computation from runtime to build-time

			section
				h2 Jekyll
				h3 Written in Ruby by Tom Preston-Werner
				h3 Brought static sites into vogue
				h3 Works through well-defined directories
				h3 #[code _sass], #[code _posts], #[code _layouts], etc.

			section
				h2 In other words: magic
				h3 Have to learn what all the directories "mean"
				h3 Build process isn't clear
				h3 How do these actually get turned into a static site?

			section
				h2 Too many concepts
				h3 Layouts
				h3 Includes
				h3 Collections
				h3 Posts
				h3 Plugins
				h3 Understandable generally, but Jekyll-specific implementation

			section
				h2 Unix philosophy
				h3 Do one thing and do it well
				h3 Write programs to work together
				h3 Write programs to handle text streams, because that is a universal interface
				h3 (-#[cite Doug McIlroy])
				h3 What one thing does Jekyll do?

			section
				h2 Something that maps to Unix
				h3 #[a(href='http://gulpjs.com') Gulp]
				h3 Build system
				h3 Streams of in-memory file objects
				h3 Transforms connected by pipes

			section
				h2 Example
				pre
					code.language-javascript.
						/* var pug = require('gulp-pug'), etc. */
						gulp.task('html', function() {
						    gulp.src(['src/*.pug'])
						        .pipe(pug())
						        .pipe(rename({ extname: '.html' }))
						        .pipe(gulp.dest('dist'));
						});

			section
				h2 So what is StraticJS?
				h3 A set of #[a(href='https://www.hypermodul.es/') hypermodular] Gulp plugins...
				h3 ...and a Yeoman generator.
				h3 That's it.

			section
				h2 Foundations
				h3 #[a(href='http://gulpjs.com/') Gulp]
				h3 #[a(href='https://pugjs.org/') Pug]
				h3 Markdown
				h3 #[a(href='http://stylus-lang.com/') Stylus]
				h3 #[a(href='http://yeoman.io/') Yeoman]
				h3 All broadly applicable

 			section
				h2 How do I use it?
				pre
					code.language-bash.
						$ npm install -g yo generator-stratic gulp
						$ mkdir stratic-project && cd stratic-project
						$ yo stratic
						$ gulp serve

			section
				h2 Example: post pages
				pre
					code.language-markdown.
						---
						title: "Example post"
						time:
						  epoch: 1434272547
						  utcoffset: "UTC-8"
						author: "Alex Jordan"
						categories:
						  - development
						---
						
						# A Markdown Header
						
						Here's some text in this blog post.
													
			section
				h2 Example: post pages
				pre
					code.language-javascript.
						gulp.task('posts', function() {
						    return gulp.src('src/blog/*.md')
						               .pipe(frontMatter())
						               .pipe(remark({quiet: true}).use(remarkHtml))
						               .pipe(dateInPath()) /* Stratic module */
						               .pipe(addsrc('src/blog/post.pug'))
						               .pipe(attachToTemplate('post.pug'))
						               .pipe(pug({pretty: true, basedir: __dirname}))
						               .pipe(rename({ extname: '.html' }))
						               .pipe(gulp.dest('dist/blog'));
						});

			section
				h2 Composability
				h3 #[code dateInPath()] is Stratic-specific
				h3 The rest are generic Gulp modules
				h3 Some (#[code attachToTemplate()]) were written for Stratic but are broadly useful

			section
				h2 Consequences
				h3 No plugin ecosystem
				h3 No need to reinvent the world
				h3 Each piece works on its own
				h3 You can literally read the build process

			section
				h2 Case study
				h3 #[code stratic-parse-header]
				h3 Original metadata system
				h3 Based on parsing natural-looking Markdown text with values split by #[code "]
				h3 Terrible idea
				h3 So pain

			section
				h2 #[code stratic-parse-header] example
				pre
					code.language-markdown.
						# Post information
						
						This post was published as "Post title" at
						"1419680682 UTC-8" by "AJ Jordan", and was
						categorized as "personal".
						
						# Post text
						
						The post text would go here.

			section
				h2 #[code stratic-parse-header] deprecation
				h3 Change Markdown to use YAML frontmatter
				h3 Replace #[code .pipe(parse())] with #[code .pipe(frontmatter())]
				h3 Such easy

			section
				h2 I touched the parts that were affected
				h3 Nothing else.

			section
				h2 Complex example: generating indexes
				pre
					code.language-javascript.
						gulp.task('post-index', function() {
							return gulp.src('src/blog/*.md')
							           .pipe(frontMatter())
							           .pipe(remark({quiet: true}).use(remarkHtml))
							           .pipe(dateInPath())  /* Stratic module */
							           .pipe(addsrc('src/blog/index.pug'))
							           .pipe(postsToIndex('index.pug'))  /* Stratic module */
							           .pipe(paginateIndexes())  /* Stratic module */
							           .pipe(pug({pretty: true, basedir: __dirname}))
							           .pipe(rename({ extname: '.html' }))
							           .pipe(gulp.dest('dist/blog'));
						});	

			section
				h2 More composability
				h3 Bare minimum of Stratic-specific modules (still)
				h3 #[code dateInPath()], #[code postsToIndex()], and #[code paginateIndexes()]
				h3 Each component doesn't care about the other components
				h3 It Just Worksâ„¢ with loose property name conventions on Vinyl file objects
				h3 This is taken #[a(href='https://github.com/straticjs/RFCs/issues/2') really seriously]

			section
				h2 Hate Markdown?
				h3 Replace YAML frontmatter parser
				h3 Replace Remark
				h3 Done

			section
				h2 Hate Pug?
				h3 Rewrite templates
				h3 Rename template filename (e.g. #[code addsrc()] argument)
				h3 Replace #[code .pipe(pug())]
				h3 Done

			section
				h2 What's coming down the pipe?
				h3 Vinyl file objects
				h3 Conventional property names on file objects
				h3 #[code file.data.propname] - #[code file.data] is conventional for "extra" data across the Gulp ecosystem

			section
				h2 Property names
				h3 #[code file.data.title]
				h3 #[code file.data.author]
				h3 #[code file.data.time.epoch] - Unix time epoch
				h3 #[code file.data.time.utcoffset] - timezone information
				h3 #[code file.data.categories]

			section
				h2 Index-related property names
				h3 #[code file.data.indexType] - one of #[code main], #[code year], #[code month], or #[code category]
				h3 #[code file.data.includedYears] - populated on #[code main] indexes
				h3 #[code file.data.year] - populated on #[code year] indexes
				h3 #[code file.data.includedMonths] - populated on #[code year] indexes
				h3 #[code file.data.month] - populated on #[code month] indexes
				h3 #[code file.data.category] - populated on #[code category] indexes

			section
				h2 Templates
				h3 Post templates are responsible for rendering out HTML
				h3 Directly controlled by you
				h3 #[a(href='https://github.com/strugee/strugee.github.com/blob/115e02de86ed81557d9af4e6eba01349116ad4bd/src/blog/post.jade') Example post template]
				h3 #[a(href='https://github.com/strugee/strugee.github.com/blob/115e02de86ed81557d9af4e6eba01349116ad4bd/src/blog/index.jade') Example index template]
				h3 #[a(href='https://github.com/strugee/strugee.github.com/blob/115e02de86ed81557d9af4e6eba01349116ad4bd/src/includes/post.jade') Example post render mixin]

			section
				h2 Final example
				pre
					code.language-javascript.
						gulp.task('rss', function() {
							return gulp.src('src/blog/*.md')
							           .pipe(frontMatter())
							           .pipe(remark({quiet: true}).use(remarkHtml))
							           .pipe(dateInPath())  /* Stratic module */
							           .pipe(addsrc('src/blog/index.pug'))
							           .pipe(postsToIndex('index.pug'))  /* Stratic module */
							           .pipe(indexesToRss({
								           title: 'strugee.net blog'
							           }, 'https://strugee.net/blog/'))  /* Stratic module */
							           .pipe(rename({ extname: '.rss' }))
							           .pipe(gulp.dest('dist/blog'));
						});

			section
				h2 Current issues
				h3 (It's a beta, remember)
				h3 Performance
				h3 Duplication in #[code gulpfile.js]
				h3 Small missing features (drafts, default categories, etc.)
				h3 Project-wide docs
				h3 Better debugging/error handling

			section
				h2 Engaging
				h3 #[code #stratic] on Freenode
				h3 #[a(href='https://github.com/straticjs/RFCs') straticjs/RFCs]
				h3 Please give design feedback, file bugs, and fix issues!

			section
				h2 Thanks!
				h3 I've been AJ
				h3 Questions?

			section
				h2 Access this presentation again
				h3 #[a(href='https://strugee.net/presentation-straticjs/') https://strugee.net/presentation-straticjs/]
				p
					img(src='images/qr.png', alt='QR code to presentation URL', width='200', height='200')
				h4 Or, #[a(href='https://github.com/strugee/presentation-pumpio') check out the source].

		script(src='build/build.js')
